import{_ as a,r as n,o as d,c as i,a as e,b as s,w as l,e as t,d as r}from"./app.f95394c5.js";const c={},u=e("h1",{id:"oxrs-node-red-integrations",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#oxrs-node-red-integrations","aria-hidden":"true"},"#"),t(" OXRS Node-RED integrations")],-1),h=e("h2",{id:"introduction",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#introduction","aria-hidden":"true"},"#"),t(" Introduction")],-1),g=e("p",null,[t("This guide shows "),e("code",null,"automation"),t(" samples to be used in Node-RED. They make use of the event structure that is sent by the StateMonitor via MQTT.")],-1),b=t("For details on "),p=e("code",null,"configuration",-1),x=t(" and "),f=e("code",null,"events",-1),m=t(" see the "),v=t("StateMonitor"),y=t(" documentation."),q=r(`<p>The following samples are using the config topic <code>conf/58391f</code> and the state topic <code>stat/58391f</code>. Those are the defaults as allocated by the FW using the MAC address of the device. Index numbers need to be replaced according to your set up.</p><h2 id="example-set-1-inputs-related-to-state-monitor-state-io-and-smoke-detector" tabindex="-1"><a class="header-anchor" href="#example-set-1-inputs-related-to-state-monitor-state-io-and-smoke-detector" aria-hidden="true">#</a> Example set 1 (inputs), related to State Monitor, State IO and Smoke Detector</h2><h3 id="example-1-1-use-a-switch-to-turn-light-on-and-off" tabindex="-1"><a class="header-anchor" href="#example-1-1-use-a-switch-to-turn-light-on-and-off" aria-hidden="true">#</a> Example 1.1: Use a <code>switch</code> to turn light on and off</h3><hr><h4 id="typical-use-case-standard-wall-switch" tabindex="-1"><a class="header-anchor" href="#typical-use-case-standard-wall-switch" aria-hidden="true">#</a> Typical use case : standard wall switch.</h4><p>To configure input <code>index: 5</code> as <code>switch</code> publish :</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code> -t conf/58391f  -m &#39;{&quot;inputs&quot;: [{ &quot;index&quot;: 5 , &quot;type&quot;: &quot;switch&quot;}]}&#39;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Use configured switch to turn a light on / off.</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>
To Do

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="example-1-2-use-two-toggle-buttons-to-toggle-a-light-state-from-several-locations" tabindex="-1"><a class="header-anchor" href="#example-1-2-use-two-toggle-buttons-to-toggle-a-light-state-from-several-locations" aria-hidden="true">#</a> Example 1.2: Use two <code>toggle</code> buttons to toggle a light state from several locations</h3><hr><h4 id="typical-use-cases-hallway-lighting-or-bedroom-lighting" tabindex="-1"><a class="header-anchor" href="#typical-use-cases-hallway-lighting-or-bedroom-lighting" aria-hidden="true">#</a> Typical use cases: hallway lighting or bedroom lighting.</h4><p>To configure inputs <code>index: 1</code> and <code>index: 2</code> as <code>toggle</code> publish :</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code> -t conf/58391f  -m &#39;{&quot;inputs&quot;: [{&quot;index&quot;: 2, &quot;type&quot;: &quot;toggle&quot;},{&quot;index&quot;: 1, &quot;type&quot;: &quot;toggle&quot; }]}&#39;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Use configured buttons to toggle connected light by any of the buttons.</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>
To Do

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="custom-container tip"><p class="custom-container-title">TIP</p><p>Can be as many buttons as you like, just add more conditions:</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>
To Do

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></div><h3 id="example-1-3-use-two-buttons-to-control-brightness-and-state-of-a-light-bulb" tabindex="-1"><a class="header-anchor" href="#example-1-3-use-two-buttons-to-control-brightness-and-state-of-a-light-bulb" aria-hidden="true">#</a> Example 1.3: Use two <code>buttons</code> to control brightness and state of a light bulb</h3><hr><h4 id="typical-use-case-control-of-lights-with-variable-brightness-with-up-and-down-buttons" tabindex="-1"><a class="header-anchor" href="#typical-use-case-control-of-lights-with-variable-brightness-with-up-and-down-buttons" aria-hidden="true">#</a> Typical use case: control of lights with variable brightness with up and down buttons.</h4><p>To configure inputs <code>index: 1</code> and <code>index: 2</code> as <code>buttons</code> publish :</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code> -t conf/58391f  -m &#39;{&quot;inputs&quot;: [{&quot;index&quot;: 2, &quot;type&quot;: &quot;button&quot;},{&quot;index&quot;: 1, &quot;type&quot;: &quot;button&quot; }]}&#39;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>This is a more complex automation. It uses the <code>single</code> and <code>hold</code> events from each of the 2 involved buttons. The <code>single</code> event is used for brightness control, and the <code>hold</code> event for turning the light on/off.</p><table><thead><tr><th style="text-align:left;">index</th><th style="text-align:left;">event</th><th style="text-align:left;">function</th></tr></thead><tbody><tr><td style="text-align:left;">1</td><td style="text-align:left;">single</td><td style="text-align:left;">decrease brightness</td></tr><tr><td style="text-align:left;">1</td><td style="text-align:left;">hold</td><td style="text-align:left;">turn off</td></tr><tr><td style="text-align:left;">2</td><td style="text-align:left;">single</td><td style="text-align:left;">increase brightness</td></tr><tr><td style="text-align:left;">2</td><td style="text-align:left;">hold</td><td style="text-align:left;">turn on</td></tr></tbody></table><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>
To Do

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="example-1-4-use-a-rotary-encoder-with-integrated-button-to-control-brightness-and-state-of-a-light-bulb" tabindex="-1"><a class="header-anchor" href="#example-1-4-use-a-rotary-encoder-with-integrated-button-to-control-brightness-and-state-of-a-light-bulb" aria-hidden="true">#</a> Example 1.4: Use a rotary encoder with integrated button to control brightness and state of a light bulb</h3><hr><h4 id="typical-use-case-single-knob-control-of-lights-with-variable-brightness-via-a-rotary-encoder" tabindex="-1"><a class="header-anchor" href="#typical-use-case-single-knob-control-of-lights-with-variable-brightness-via-a-rotary-encoder" aria-hidden="true">#</a> Typical use case: single knob control of lights with variable brightness via a rotary encoder.</h4><p>The outputs <code>A</code> and <code>B</code> of the <code>rotary encoder</code> are connected to <code>index: 1</code> and <code>index: 2</code> . The integrated <code>push button</code> of the <code>rotary encoder</code> is connected to <code>index: 3</code> .</p><p>To configure inputs <code>index: 1</code> and <code>index: 2</code> as <code>rotary</code> and <code>index:3</code> as <code>toggle</code> publish :</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code> -t conf/58391f -m &#39;{&quot;inputs&quot;: [
    {&quot;index&quot;: 1, &quot;type&quot;: &quot;rotary&quot;},
    {&quot;index&quot;: 2, &quot;type&quot;: &quot;rotary&quot;},
    {&quot;index&quot;: 3, &quot;type&quot;: &quot;toggle&quot;}]}&#39;

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>This is another more complex automation. It uses the <code>up</code> and <code>down</code> events from the rotary encoder for brightness control. The <code>toggle</code> event of the integrated push button is used to control the state of the light bulb.</p><p>Turning the rotary encoder has no effect if the light is turned off.</p><table><thead><tr><th style="text-align:left;">index</th><th style="text-align:left;">event</th><th style="text-align:left;">function</th></tr></thead><tbody><tr><td style="text-align:left;">2</td><td style="text-align:left;">up</td><td style="text-align:left;">increase brightness</td></tr><tr><td style="text-align:left;">2</td><td style="text-align:left;">down</td><td style="text-align:left;">decrease brightness</td></tr><tr><td style="text-align:left;">3</td><td style="text-align:left;">toggle</td><td style="text-align:left;">turn on / off</td></tr></tbody></table><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>
To Do

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="example-set-2-outputs-related-to-state-controller-state-io-and-smoke-detector" tabindex="-1"><a class="header-anchor" href="#example-set-2-outputs-related-to-state-controller-state-io-and-smoke-detector" aria-hidden="true">#</a> Example set 2 (outputs), related to State Controller, State IO and Smoke Detector</h2><h3 id="example-2-1-turn-light-bulb-on-and-off" tabindex="-1"><a class="header-anchor" href="#example-2-1-turn-light-bulb-on-and-off" aria-hidden="true">#</a> Example 2.1: Turn light bulb on and off</h3><hr><h4 id="typical-use-case-standard-light-bulb-controlled-by-wall-switch" tabindex="-1"><a class="header-anchor" href="#typical-use-case-standard-light-bulb-controlled-by-wall-switch" aria-hidden="true">#</a> Typical use case : standard light bulb controlled by wall switch.</h4><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>
To Do

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,40);function w(_,T){const o=n("RouterLink");return d(),i("div",null,[u,h,g,e("p",null,[b,p,x,f,m,s(o,{to:"/docs/firmware/state-monitor-esp32.html"},{default:l(()=>[v]),_:1}),y]),q])}var D=a(c,[["render",w],["__file","node_red.html.vue"]]);export{D as default};
