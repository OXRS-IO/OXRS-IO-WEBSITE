import{_ as i,r as n,o as l,c,a as e,b as o,w as a,d,e as t}from"./app.f95394c5.js";var h="/images/oxrs-rack32.jpg";const u={},p=d('<h1 id="rack32" tabindex="-1"><a class="header-anchor" href="#rack32" aria-hidden="true">#</a> Rack32</h1><p class="maker">by <b>SuperHouse Automation</b></p><blockquote><p>SKU: OXRS-SHA-RACK32</p></blockquote><p><img src="'+h+'" alt="SuperHouse Automation Rack32 ESP32 control board"></p><p>A general purpose control board for rack mount projects.</p><p>DIY rack-mount projects often require an Ethernet connection, a status display, power regulation, and other features that are not specific to the project.</p><p>This board fits into a rack-mount case and provides those common features so they don&#39;t have to be recreated every time.</p><h2 id="features" tabindex="-1"><a class="header-anchor" href="#features" aria-hidden="true">#</a> Features</h2><ul><li><strong>ESP32</strong> microcontroller with <strong>WiFi</strong>.</li><li><strong>10/100Mbps</strong> Ethernet.</li><li>Support for both DIY (12V) PoE and <strong>802.3af PoE</strong>.</li><li>Pluggable terminal block for optional external DC power input.</li><li>Automotive-grade voltage regulator for harsh electrical environments.</li><li>6-way IDC &quot;I2C-Breakout&quot; header for linking to other boards.</li><li>8-way IDC &quot;SPI-LCD&quot; header for connection to an LCD.</li><li><strong>USB-C</strong> connector for loading firmware.</li><li>Auto power source selection between USB-C, PoE, and external DC.</li><li>I/O header with power, 2 x I2C ports, and second hardware serial port.</li><li>Micro SD card slot for config files, logs, and media storage.</li><li>Onboard <strong>temperature sensor</strong>.</li><li>Header for front-panel power LED.</li><li>Can be built with onboard PCB antenna or external WiFi antenna.</li></ul><div class="custom-container danger"><p class="custom-container-title">PoE Bypass Jumpers</p><p>The PoE bypass jumper headers are &#39;Red&#39; for a reason. <strong>DO NOT</strong> insert these jumpers if you are intending to power the Rack32 via <strong>802.3af PoE</strong>. ONLY insert them if you intend using DIY (12V) PoE, otherwise you will apply 48VDC from the <strong>802.3af PoE</strong> source to the L78S05CV linear 5V regulator (25VDC max input voltage) and destroy it.</p></div><div class="custom-container danger"><p class="custom-container-title">External I2C Hardware</p><p><strong>DO NOT</strong> connect any external supported hardware to the &#39;I2CBreakout&#39; socket while the Rack32 is powered up as this will likely cause a failure of the AP2112K LDO 3.3V regulator or the ESP32 itself. <strong>ONLY connect external supported hardware to the &#39;I2CBreakout&#39; socket when the Rack32 is powered down.</strong></p></div><h2 id="supported-firmware" tabindex="-1"><a class="header-anchor" href="#supported-firmware" aria-hidden="true">#</a> Supported Firmware</h2>',12),_=t("OXRS State Monitor ESP32 "),m=t("OXRS-SHA-StateMonitor-ESP32"),f=t("OXRS State Controller ESP32 "),S=t("OXRS-SHA-StateController-ESP32"),w=t("OXRS State IO ESP32 "),g=t("OXRS-SHA-StateIO-ESP32-FW"),b={class:"custom-container tip"},k=e("p",{class:"custom-container-title"},"TIP",-1),E=t("The State IO ESP32 firmware combines the functionality of both the "),C=t("OXRS-SHA-StateMonitor-ESP32"),P=t(" and "),R=t("OXRS-SHA-StateController-ESP32"),O=t(" firmware in the one package."),v=t("OXRS Smoke Detector ESP32 "),x=t("OXRS-SHA-SmokeDetector-ESP32-FW"),y=e("h2",{id:"supported-libraries",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#supported-libraries","aria-hidden":"true"},"#"),t(" Supported Libraries")],-1),I=t("OXRS-SHA-Rack32-ESP32-LIB "),A={href:"https://github.com/SuperHouse/OXRS-SHA-Rack32-ESP32-LIB",target:"_blank",rel:"noopener noreferrer"},D=t("Github"),H=e("h2",{id:"additional-resources",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#additional-resources","aria-hidden":"true"},"#"),t(" Additional Resources")],-1),L=t("More info "),X={href:"https://github.com/SuperHouse/RACK32",target:"_blank",rel:"noopener noreferrer"},B=t("Github"),V=e("h2",{id:"where-to-buy",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#where-to-buy","aria-hidden":"true"},"#"),t(" Where to Buy")],-1),q={href:"https://www.superhouse.tv/product/rack32-universal-rack-controller-board/",target:"_blank",rel:"noopener noreferrer"},F=t("SuperHouse Store"),M=e("h2",{id:"faqs",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#faqs","aria-hidden":"true"},"#"),t(" FAQs")],-1),N=e("details",{class:"custom-container details"},[e("summary",null,"Does it come with a power supply?"),e("p",null,"TODO - Jon to supply some FAQ's")],-1),T={class:"custom-container tip"},j=e("p",{class:"custom-container-title"},"Maker Info",-1),K=e("p",null,[e("strong",null,"Maker:"),t(" SuperHouse Automation")],-1),W=e("strong",null,"Link:",-1),Y=t(),J={href:"https://www.superhouse.tv",target:"_blank",rel:"noopener noreferrer"},U=t("https://www.superhouse.tv"),G=e("h2",{id:"compatible-hardware",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#compatible-hardware","aria-hidden":"true"},"#"),t(" Compatible Hardware")],-1),Q=e("p",null,"Input/Output devices",-1),z=t("I2CRJ45 / Light Switch Controller"),Z=t(" by SuperHouse"),$=e("p",null,"Shields",-1),ee=t("Rack32 KNX Shield"),te=t(" by Frank McAlinden");function oe(re,ae){const r=n("RouterLink"),s=n("ExternalLinkIcon");return l(),c("div",null,[p,e("ul",null,[e("li",null,[_,o(r,{to:"/docs/firmware/state-monitor-esp32.html"},{default:a(()=>[m]),_:1})]),e("li",null,[f,o(r,{to:"/docs/firmware/state-controller-esp32.html"},{default:a(()=>[S]),_:1})]),e("li",null,[w,o(r,{to:"/docs/firmware/state-io-esp32.html"},{default:a(()=>[g]),_:1})])]),e("div",b,[k,e("p",null,[E,o(r,{to:"/docs/firmware/state-monitor-esp32.html"},{default:a(()=>[C]),_:1}),P,o(r,{to:"/docs/firmware/state-controller-esp32.html"},{default:a(()=>[R]),_:1}),O])]),e("ul",null,[e("li",null,[v,o(r,{to:"/docs/firmware/smoke-detector-esp32.html"},{default:a(()=>[x]),_:1})])]),y,e("ul",null,[e("li",null,[I,e("a",A,[D,o(s)])])]),H,e("ul",null,[e("li",null,[L,e("a",X,[B,o(s)])])]),V,e("ul",null,[e("li",null,[e("a",q,[F,o(s)])])]),M,N,e("div",T,[j,K,e("p",null,[W,Y,e("a",J,[U,o(s)])])]),G,Q,e("ul",null,[e("li",null,[o(r,{to:"/docs/hardware/input-devices/I2CRJ45.html"},{default:a(()=>[z]),_:1}),Z])]),$,e("ul",null,[e("li",null,[o(r,{to:"/docs/hardware/shields/rack32-knx-shield.html"},{default:a(()=>[ee]),_:1}),te])])])}var ne=i(u,[["render",oe],["__file","rack32.html.vue"]]);export{ne as default};
